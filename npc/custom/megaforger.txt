//===== eAthena/rAthena Script =======================================
//= Weapon Forger
//===== Template by: =========================================
//= Pang Cake
//===== Modified by: =========================================
//= Mysterious
//===== Current Version: =====================================
//= 1.2
//===== Compatible With: =====================================
//= eAthena / rAthena SVN
//===== Description: =========================================
//= This NPC forges NAMELESS weapons, and can incorporate element stones and star crumbs.
//= The forge chance is adjustable by changing the formula below.
//===== Additional Comments: ========================================
//= v1.0 - Initial release [Pang Cake]
//= v1.1 - Fixed a couple of things [Mysterious]
//= v1.2 - Proper disclaimer [Mysterious]
//============================================================
prontera,146,169,5	script	Katanakaji	813,{

// ============= Configuration Settings ==================
// Based on following forge success-rate formula:
// ( 5 * Skill Level ) + ( Job Level / 5 ) + ( DEX / 10 ) + ( LUK / 10 ) + 50.
	set .ForgeSkLvl1, 3; // Level of Forge Skill ( Forge Sword, Forge Mace, etc ). Recommended: 3 max.
	
	set .Jlvl1, 70; // Job level of Katanakaji NPC.Recommended: 70 max.
	set .ForDex1, 80; // The dexterity stat of the Forge NPC. Recommended: 99 max.
	set .ForLuk1, 80; // The luck stat of the Forge NPC.Recommended: 99 max.
	set .AnvMod1, 5; // Anvil chance mods, e.g. 0 = Normal Anvil, 3 = Oridecon Anvil, 5 = Golden Anvil, 10 = Emperium Anvil. Recommended: 10 max.
	
// Forge formula - don't fiddle with this one unless you want to change the formula.
	
	set .ForgeChance11, (((.ForgeSkLvl1 * 5 ) + ( .Jlvl1 / 5 ) + ( .ForDex1 / 10 ) + ( .ForLuk1 / 10 ) + .AnvMod1 + 50) + 15 );
	set .IronChance1, ((( 40 + 25 ) + ( .JLvl / 5 ) + ( .ForDex /10 ) + ( .ForLuk /10 ) ) + 15 ) ;
	set .SteelChance1, ((( 30 + 25 ) + ( .JLvl / 5 ) + ( .ForDex /10 ) + ( .ForLuk /10 ) ) + 15 ) ;	
	set .StoneChance1, ((( 10 + 25 ) + ( .JLvl / 5 ) + ( .ForDex /10 ) + ( .ForLuk /10 ) ) + 15 ) ;
	.forgeprice1 = 500000;
	
// Misc. Configuration.

	set .Wait,3;		// Progress bar delay in seconds	
	set .gmbypasslv1, 50; // Minimum GM level for ignoring item requirements.
	set .nameset1, 1; // Weapons will be forged with: 0 = Nameless, 1 = Invoking PC's name.
	set .perfectchance1, 0; // Set to 1 to enable 100% forge chance.
// ============== End Configurations ================	
if (checkweight(21016,1) == 0) {
	mes "[^FF6600Katanakaji^000000]";
    mes "You're carrying too much stuffs , make some space and come back to me later";
        close;	
	}
if ( countitem( 988 ) <=0) {
	mes "[^FF6600Katanakaji^000000]";
    mes "Hm ? Forging ? I'll gladly do that if only you have a ^FF0099Golden Anvil^000000 ";
        close;	
	}
if( countitem( 988 )) >=1 {
	mes "[^FF6600Katanakaji^000000]";
    mes "Ah, that's Golden anvil indeed.";
	mes "Okay then, i'll forge for ya.";
        next;	
	}
	mes "[^FF6600Katanakaji^000000]";
	mes "Hello, I am Katanakaji. If you provide the materials, I can forge weapons for you.";
	mes "For the cost of ^0055FF 500.000 ^000000 Zeny";
	mes "Would you like me to forge you a weapon?";
	next;
	switch( select( "Forge.:Craft:Information.:No." ) ) {
		case 1:
			break;
		case 2:
	mes "[^FF6600Katanakaji^000000]";
	mes "Alright, which material you wanna craft ?";
	next;			
	switch( select( "Iron.:Steel.:Forging Stone.:No." ) ) {	
	case 1:
	if ((countitem(1002) < 10) && (countitem(612) < 10)){
	mes "[^FF6600Seiken^000000]";
	mes "Craft chance : ^FF0000" + .IronChance1 + "^000000%.";	
	mes "You need 10 Mini Furnace";
	mes "and 10 Iron Ore";
	close;
	}
	if ((countitem(1002) >= 10) && (countitem(612) >= 10)){	next;	
	mes "[^FF6600Seiken^000000]";
	mes "Here's your iron.";	
	if( .IronChance1 >= rand( 100 ) ) {
	delitem 1002,10;
	delitem 612,10;
	getitem 998,10;
	close;
	} }
		if( .IronChance1 < rand( 100 ) ) {
			specialeffect 155;
			next;
			mes "[^FF6600Seiken^000000]";
			mes "I am very sorry, iron creation has ^FF0000failed^000000. Better luck next time.";
			close;
			}
	case 2: 
	if ((countitem(998) < 50) && (countitem(1002) < 10) && (countitem (612) < 10 )){
	mes "[^FF6600Seiken^000000]";
	mes "Craft chance : ^FF0000" + .SteelChance1 + "^000000%.";	
	mes "You need 10 Mini Furnace";
	mes "50 Iron, and 10 Coal";
	close;
	}
	if ((countitem(998) >= 50) && (countitem(1002) >= 10) && (countitem (612) >= 10 )){ next;
	mes "[^FF6600Seiken^000000]";
	mes "Crafting .. Steel.";	
	if( .SteelChance1 >= rand( 100 ) ) {
	delitem 998,50;
	delitem 1002,10;
	delitem 612,10;
	getitem 999,10;
	close;
	} }
		else if( .SteelChance1 <= rand( 100 ) ) {
			specialeffect 155;
			next;
			mes "[^FF6600Seiken^000000]";
			mes "I am very sorry, Steel creation has ^FF0000failed^000000. Better luck next time.";
			close;
			}		
	case 3:
	mes "[^FF6600Seiken^000000]";
	mes "Which Stone would you like to craft?";
	switch( select( "Flame Heart.:Mystic Frozen.:Rough Wind.:Great Nature.:Star Crumb.:Nothing." ) ) {	
	next;	
	case 1:
	if ((countitem(990) < 10) && (countitem (612) <1 )){
	mes "[^FF6600Seiken^000000]";
	mes "Craft chance : ^FF0000" + .StoneChance1 + "^000000%.";	
	mes "You need 10 Red Blood";
	mes "and 1 Mini Furnace";
	close;
	}
	if ((countitem(990) >= 10) && (countitem (612) >= 1 )){
	mes "[^FF6600Seiken^000000]";	
	mes "Crafting .. Flame Heart.";	
	if( .StoneChance1 >= rand( 100 ) ) {
	delitem 990,10;
	delitem 612,1;
	getitem 994,10;
	close;
	} }
		else {
			specialeffect 155;
			next;
			mes "[^FF6600Seiken^000000]";
			mes "I am very sorry, iron creation has ^FF0000failed^000000. Better luck next time.";
			close;
		}		
			case 2:
	if ((countitem(991) < 10) && (countitem (612) <1 )){
	mes "[^FF6600Seiken^000000]";
	mes "Craft chance : ^FF0000" + .StoneChance1 + "^000000%.";			
	mes "You need 10 Crystal Blue";
	mes "and 1 Mini Furnace";
	close;
	}
	if ((countitem(991) >= 10) && (countitem (612) >= 1 )){	
	mes "[^FF6600Seiken^000000]";
	mes "Crafting .. Mystic Frozen.";	
	if( .StoneChance1 >= rand( 100 ) ) {
	delitem 991,10;
	delitem 612,1;
	getitem 995,10;
	close;
	} }
		else {
			specialeffect 155;
			next;
			mes "[^FF6600Seiken^000000]";
			mes "I am very sorry, iron creation has ^FF0000failed^000000. Better luck next time.";
			close;
			}
			case 3:
	if ((countitem(992) < 10) && (countitem (612) <1 )){
	mes "[^FF6600Seiken^000000]";
	mes "Craft chance : ^FF0000" + .StoneChance1 + "^000000%.";			
	mes "You need 10 Wind of Verdure";
	mes "and 10 Mini Furnace";
	close;
	}
	if ((countitem(992) >= 10) && (countitem (612) >= 1 )){
	mes "[^FF6600Seiken^000000]";
	mes "Crafting .. Rough wind.";	
	if( .StoneChance1 >= rand( 100 ) ) {
	delitem 992,10;
	delitem 612,1;
	getitem 996,10;
	close;
	} }
		else {
			specialeffect 155;
			next;
			mes "[^FF6600Seiken^000000]";
			mes "I am very sorry, iron creation has ^FF0000failed^000000. Better luck next time.";
			close;
			}
			case 4:
	if ((countitem(993) < 10) && (countitem (612) <1 )){
	mes "[^FF6600Seiken^000000]";
	mes "Craft chance : ^FF0000" + .StoneChance1 + "^000000%.";		
	mes "You need 10 Green Live";
	mes "and 1 Mini Furnace";
	close;
	}
	if ((countitem(993) >= 10) && (countitem (612) >= 1 )){
	mes "[^FF6600Seiken^000000]";
	mes "Crafting .. Great Nature.";	
	if( .StoneChance1 >= rand( 100 ) ) {
	delitem 993,10;
	delitem 612,1;
	getitem 997,10;
	close;
	} }
		else {
			specialeffect 155;
			next;
			mes "[^FF6600Seiken^000000]";
			mes "I am very sorry, iron creation has ^FF0000failed^000000. Better luck next time.";
			close;
			}
			case 5:
	if ((countitem(1001) < 10) && (countitem (612) <1 )){
	mes "[^FF6600Seiken^000000]";
	mes "Craft chance : ^FF0000" + .StoneChance1 + "^000000%.";		
	mes "You need 10 Star Dust";
	mes "and 1 Mini Furnace";
	close;
	}
	
	if ((countitem(1001) >= 10) && (countitem (612) >= 1 )){
	next;
	mes "[^FF6600Seiken^000000]";
	mes "Crafting .. Star Crumb.";	
	if( .StoneChance1 >= rand( 100 ) ) {
	delitem 1001,10;
	delitem 612,1;
	getitem 1000,10;
	close;
	} }
		else {
			specialeffect 155;
			next;
			mes "[^FF6600Seiken^000000]";
			mes "I am very sorry, iron creation has ^FF0000failed^000000. Better luck next time.";
			close;
			}
			case 6:
			mes "[^FF6600Seiken^000000]";
			mes "See you again soon.";
			close;
	} 
		case 4: 
			mes "[^FF6600Seiken^000000]";
			mes "See you again soon.";
			close;		
	}	
		case 3:
			next;
			mes "[^FF6600Katanakaji^000000]";
			mes "What weapons would you like to know about?";
			switch( select( "Daggers.:1H Swords.:2H Swords.:Maces.:Spears.:Knuckles.:Axes.:Nothing." ) ) {
				case 1:
					mes "DAGGERS";
					mes "^FF0099LEVEL ONE^000000:";
					mes "Knife - ^FF00001x Iron, 10x Jellopies^000000.";
					mes "Cutter - ^FF000025x Iron^000000.";
					mes "Main Gauche - ^FF000050x Iron^000000.";
					mes "^FF0099LEVEL TWO^000000:";
					mes "Dirk - ^FF000017x Steel^000000.";
					mes "Dagger - ^FF000030x Steel^000000.";
					mes "Stiletto - ^FF000040x Steel^000000.";
					mes "^FF0099LEVEL THREE^000000:";
					mes "Gladius - ^FF00004x Oridecon, 40x Steel, 1x Sapphire^000000.";
					mes "Damascus - ^FF00004x Oridecon, 60x Steel, 1x Zircon^000000.";
					close;
				case 2:
					mes "1H SWORDS.";
					mes "^FF0099LEVEL ONE^000000:";
					mes "Sword - ^FF00002x Iron^000000.";
					mes "Falchion - ^FF000030x Iron^000000.";
					mes "Blade - ^FF000045x Iron, 25x Tooth of Bat^000000.";
					mes "^FF0099LEVEL TWO^000000:";
					mes "Rapier - ^FF000020x Steel^000000.";
					mes "Scimitar - ^FF000035x Steel^000000.";
					mes "Ring Pommel Saber - ^FF000040x Steel, 50x Wolf Claw^000000.";
					mes "^FF0099LEVEL THREE^000000:";
					mes "Saber - ^FF00008x Oridecon, 5x Steel, 1x Opal^000000.";
					mes "Haedongum - ^FF00008x Oridecon, 10x Steel, 1x Topaz^000000.";
					mes "Tsurugi - ^FF00008x Oridecon, 15x Steel, 1x Garnet^000000.";
					mes "Flamberge - ^FF000016x Oridecon, 1x Cursed Ruby^000000.";
					close;
				case 3:
					mes "2H SWORDS.";
					mes "^FF0099LEVEL ONE^000000:";
					mes "Katana - ^FF000035x Iron, 15x Horrendous Mouth^000000.";
					mes "^FF0099LEVEL TWO^000000:";
					mes "Slayer - ^FF000025x Steel, 20x Decayed Nail^000000.";
					mes "Bastard Sword - ^FF000045x Steel^000000.";
					mes "^FF0099LEVEL THREE^000000:";
					mes "Two-Handed Sword - ^FF000012x Oridecon, 10x Steel^000000.";
					mes "Broad Sword - ^FF000012x Oridecon, 10x Steel^000000.";
					mes "Claymore - ^FF000016x Oridecon, 20x Steel, 1x Cracked Diamond^000000.";
					close;
				case 4:
					mes "MACES.";
					mes "^FF0099LEVEL ONE^000000:";
					mes "Club - ^FF00003x Iron^000000.";
					mes "Mace - ^FF000030x Iron^000000.";
					mes "^FF0099LEVEL TWO^000000:";
					mes "Smasher - ^FF000020x Steel^000000.";
					mes "Flail - ^FF000033x Steel^000000.";
					mes "Chain - ^FF000040x Steel^000000.";
					mes "^FF0099LEVEL THREE^000000:";
					mes "Morning Star - ^FF000085x Steel, 1x 1 Carat Diamond^000000.";
					mes "Sword Mace - ^FF0000100x Steel, 20x Sharp Scale^000000.";
					mes "Stunner - ^FF0000120x Steel, 1x Heroic Emblem^000000.";
					close;
				case 5:
					mes "SPEARS.";
					mes "^FF0099LEVEL ONE^000000:";
					mes "Javelin - ^FF00003x Iron^000000.";
					mes "Spear - ^FF000035x Iron^000000.";
					mes "Pike - ^FF000070x Iron^000000.";
					mes "^FF0099LEVEL TWO^000000:";
					mes "Guisarme - ^FF000025x Steel^000000.";
					mes "Glaive - ^FF000040x Steel^000000.";
					mes "Partizan - ^FF000055x Steel^000000.";
					mes "^FF0099LEVEL THREE^000000:";
					mes "Trident - ^FF00008x Oridecon, 10x Steel, 1x Aquamarine^000000.";
					mes "Halberd - ^FF000012x Oridecon, 10x Steel^000000.";
					mes "Lance - ^FF000012x Oridecon, 3x Ruby, 2x Evil Horn^000000.";
					close;
				case 6:
					mes "KNUCKLES.";
					mes "^FF0099LEVEL ONE^000000:";
					mes "Waghnak - ^FF0000160x Iron, 1x Pearl^000000.";
					mes "^FF0099LEVEL TWO^000000:";
					mes "Knuckle Duster - ^FF000050x Steel^000000.";
					mes "Studded Knuckles - ^FF000065x Steel^000000.";
					mes "^FF0099LEVEL THREE^000000:";
					mes "Fist - ^FF00004x Oridecon, 10x Ruby^000000.";
					mes "Claw - ^FF00008x Oridecon, 10x Topaz^000000.";
					mes "Finger - ^FF00004x Oridecon, 10x Opal^000000.";
					close;
				case 7:
					mes "AXES.";
					mes "^FF0099LEVEL ONE^000000:";
					mes "Axe - ^FF000010x Iron^000000.";
					mes "Battle Axe - ^FF0000110x Iron^000000.";
					mes "^FF0099LEVEL TWO^000000:";
					mes "Hammer - ^FF000030x Steel^000000.";
					mes "^FF0099LEVEL THREE^000000:";
					mes "Buster - ^FF00004x Oridecon, 20x Steel, 30x Orcish Fang^000000.";
					mes "Two-Handed Axe - ^FF00008x Oridecon, 10x Steel, 1x Amethyst^000000.";
					close;
				case 8:
				mes "Come back when you would like to forge.";
				close;
			}
		case 4:
			mes "Alright, come back when you'd like me to forge.";
			close;
	}
	
	next;
	mes "[^FF6600Katanakaji^000000]";
	mes "What weapons would you like to forge?";
	switch( select( "Daggers.:1H Swords.:2H Swords.:Maces.:Spears.:Knuckles.:Axes.:Nothing." ) ) {
		case 1:
			mes "Which ^FF0099DAGGER^000000 would you like me to produce?";
			switch( select( "Knife (dmg 17):Cutter (dmg 30):Main Gauche (dmg 43):Dirk (dmg 59):Dagger (dmg 73):Stiletto (dmg 87):Gladius (dmg 105):Damascus (dmg 118)" ) ) {
				case 1:
					mes "You have selected ^FF0000KNIFE^000000.";
					set .ForgeID1, 1201;
					break;
				case 2:
					mes "You have selected ^FF0000CUTTER^000000.";
					set .ForgeID1, 1204;
					break;
				case 3:
					mes "You have selected ^FF0000MAIN GAUCHE^000000.";
					set .ForgeID1, 1207;
					break;
				case 4:
					mes "You have selected ^FF0000DIRK^000000.";
					set .ForgeID1, 1210;
					break;
				case 5:
					mes "You have selected ^FF0000DAGGER^000000.";
					set .ForgeID1, 1213;
					break;
				case 6:
					mes "You have selected ^FF0000STILETTO^000000.";
					set .ForgeID1, 1216;
					break;
				case 7:
					mes "You have selected ^FF0000GLADIUS^000000.";
					set .ForgeID1, 1219;
					break;
				case 8:
					mes "You have selected ^FF0000DAMASCUS^000000.";
					set .ForgeID1, 1222;
					break;
			}
			break;
		case 2:
			mes "Which ^FF00991H SWORD^000000 would you like me to produce?";
			switch( select( "Sword (dmg 25):Falchion (dmg 39):Blade (dmg 53):Rapier (dmg 70):Scimitar (dmg 85):Ring Pommel Saber (dmg 100):Saber (dmg 115):Haedongum (dmg 120):Tsurugi (dmg 130):Flamberge (dmg 150)" ) ) {
				case 1:
					mes "You have selected ^FF0000SWORD^000000.";
					set .ForgeID1, 1101;
					break;
				case 2:
					mes "You have selected ^FF0000FALCHION^000000.";
					set .ForgeID1, 1104;
					break;
				case 3:
					mes "You have selected ^FF0000BLADE^000000.";
					set .ForgeID1, 1107;
					break;
				case 4:
					mes "You have selected ^FF0000RAPIER^000000.";
					set .ForgeID1, 1110;
					break;
				case 5:
					mes "You have selected ^FF0000SCIMITAR^000000.";
					set .ForgeID1, 1113;
					break;
				case 6:
					mes "You have selected ^FF0000RING POMMEL SABER^000000.";
					set .ForgeID1, 1122;
					break;
				case 7:
					mes "You have selected ^FF0000SABER^000000.";
					set .ForgeID1, 1126;
					break;
				case 8:
					mes "You have selected ^FF0000HAEDONGUM^000000.";
					set .ForgeID1, 1123;
					break;
				case 9:
					mes "You have selected ^FF0000TSURUGI^000000.";
					set .ForgeID1, 1119;
					break;
				case 10:
					mes "You have selected ^FF0000FLAMBERGE^000000.";
					set .ForgeID1, 1129;
					break;
			}
			break;
		case 3:
			mes "Which ^FF00992H SWORD^000000 would you like me to produce?";
			switch( select( "Katana (dmg 60):Slayer (dmg 90):Bastard Sword (dmg 115):Two-Handed Sword (dmg 160):Broad Sword (dmg 140):Claymore (dmg 180)" ) ) {
				case 1:
					mes "You have selected ^FF0000KATANA^000000.";
					set .ForgeID1, 1116;
					break;
				case 2:
					mes "You have selected ^FF0000SLAYER^000000.";
					set .ForgeID1, 1151;
					break;
				case 3:
					mes "You have selected ^FF0000BASTARD SWORD^000000.";
					set .ForgeID1, 1154;
					break;
				case 4:
					mes "You have selected ^FF0000TWO-HANDED SWORD^000000.";
					set .ForgeID1, 1157;
					break;
				case 5:
					mes "You have selected ^FF0000BROAD SWORD^000000.";
					set .ForgeID1, 1160;
					break;
				case 6:
					mes "You have selected ^FF0000CLAYMORE^000000.";
					set .ForgeID1, 1163;
					break;
			}
			break;
		case 4:
			mes "Which ^FF0099MACE^000000 would you like me to produce?";
			switch( select( "Club (dmg 23):Mace (dmg 37):Smasher (dmg 54):Flail (dmg 69):Chain (dmg 84):Morning Star (dmg 110):Sword Mace (dmg 130):Stunner (dmg 140)" ) ) {
				case 1:
					mes "You have selected ^FF0000CLUB^000000.";
					set .ForgeID1, 1501;
					break;
				case 2:
					mes "You have selected ^FF0000MACE^000000.";
					set .ForgeID1, 1504;
					break;
				case 3:
					mes "You have selected ^FF0000SMASHER^000000.";
					set .ForgeID1, 1507;
					break;
				case 4:
					mes "You have selected ^FF0000FLAIL^000000.";
					set .ForgeID1, 1510;
					break;
				case 5:
					mes "You have selected ^FF0000CHAIN^000000.";
					set .ForgeID1, 1519;
					break;
				case 6:
					mes "You have selected ^FF0000MORNING STAR^000000.";
					set .ForgeID1, 1513;
					break;
				case 7:
					mes "You have selected ^FF0000SWORD MACE^000000.";
					set .ForgeID1, 1516;
					break;
				case 8:
					mes "You have selected ^FF0000STUNNER^000000.";
					set .ForgeID1, 1522;
					break;
			}
			break;
		case 5:
			mes "Which ^FF0099SPEAR^000000 would you like me to produce?";
			switch( select( "Javelin (dmg 28):Spear (dmg 44):Pike (dmg 74):Guisarme (dmg 84):Glaive (dmg 104):Partizan (dmg 124):Trident (dmg 150):Halberd (dmg 165):Lance (dmg 185)" ) ) {
				case 1:
					mes "You have selected ^FF0000JAVELIN^000000.";
					set .ForgeID1, 1401;
					break;
				case 2:
					mes "You have selected ^FF0000SPEAR^000000.";
					set .ForgeID1, 1404;
					break;
				case 3:
					mes "You have selected ^FF0000PIKE^000000.";
					set .ForgeID1, 1407;
					break;
				case 4:
					mes "You have selected ^FF0000GUISARME^000000.";
					set .ForgeID1, 1451;
					break;
				case 5:
					mes "You have selected ^FF0000GLAIVE^000000.";
					set .ForgeID1, 1454;
					break;
				case 6:
					mes "You have selected ^FF0000PARTIZAN^000000.";
					set .ForgeID1, 1457;
					break;
				case 7:
					mes "You have selected ^FF0000TRIDENT^000000.";
					set .ForgeID1, 1460;
					break;
				case 8:
					mes "You have selected ^FF0000HALBERD^000000.";
					set .ForgeID1, 1463;
					break;
				case 9:
					mes "You have selected ^FF0000LANCE^000000.";
					set .ForgeID1, 1410;
					break;
			}
			break;
		case 6:
			mes "Which ^FF0099KNUCKLE^000000 would you like me to produce?";
			switch( select( "Waghnakh (dmg 30):Knuckle Duster (dmg 50):Studded Knuckles (dmg 65):Fist (dmg 115):Claw (dmg 86):Finger (dmg 97)" ) ) {
				case 1:
					mes "You have selected ^FF0000WAGHNAKH^000000.";
					set .ForgeID1, 1801;
					break;
				case 2:
					mes "You have selected ^FF0000KNUCKLE DUSTER^000000.";
					set .ForgeID1, 1803;
					break;
				case 3:
					mes "You have selected ^FF0000STUDDED KNUCKLES^000000.";
					set .ForgeID1, 1805;
					break;
				case 4:
					mes "You have selected ^FF0000FIST^000000.";
					set .ForgeID1, 1807;
					break;
				case 5:
					mes "You have selected ^FF0000CLAW^000000.";
					set .ForgeID1, 1809;
					break;
				case 6:
					mes "You have selected ^FF0000FINGER^000000.";
					set .ForgeID1, 1811;
					break;
			}
			break;
		case 7:
			mes "Which ^FF0099AXE^000000 would you like me to produce?";
			switch( select( "Axe (dmg 38):Battle Axe (dmg 80):Hammer (dmg 120):Buster (dmg 115):Two-Handed Axe (dmg 185)" ) ) {
				case 1:
					mes "You have selected ^FF0000AXE^000000.";
					set .ForgeID1, 1301;
					break;
				case 2:
					mes "You have selected ^FF0000BATTLE AXE^000000.";
					set .ForgeID1, 1351;
					break;
				case 3:
					mes "You have selected ^FF0000HAMMER^000000.";
					set .ForgeID1, 1354;
					break;
				case 4:
					mes "You have selected ^FF0000BUSTER^000000.";
					set .ForgeID1, 1357;
					break;
				case 5:
					mes "You have selected ^FF0000TWO-HANDED AXE^000000.";
					set .ForgeID1, 1360;
					break;
			}
			break;
		case 8:
		mes "Okay, see you next time.";
		close;
	}
	
	if( getiteminfo( .ForgeID1 , 13 ) > 1 ) {
		set .ForgeChance11, .ForgeChance11 - ( getiteminfo( .ForgeID1 , 13 ) * 10 );
	}
	
	next;
	mes "[^FF6600Katanakaji^000000]";
	mes "How many ^FF0099Star Crumbs^000000 would you like to put in your weapon?";
	switch( select( "1.:2.:3.:None." ) ) {
	case 1:
		mes "You wish to forge a ^FF0000VERY STRONG^000000 weapon.";
		set .SCFor1, 1;
		set .ForgeChance11, .ForgeChance11 - 15;
		break;
	case 2:
		mes "You wish to forge a ^FF0000VERY VERY STRONG^000000 weapon.";
		set .SCFor1, 2;
		set .ForgeChance11, .ForgeChance11 - 30;
		break;
	case 3:
		mes "You wish to forge a ^FF0000VERY VERY VERY STRONG^000000 weapon.";
		set .SCFor1, 3;
		set .ForgeChance11, .ForgeChance11 - 45;
		break;
	case 4:
		mes "You do not wish to put ^FF0099Star Crumbs^000000 in this weapon.";
		set .SCFor1, 0;
		break;
	}
	
	if( .SCFor1 < 3 ) {
		next;
		mes "[^FF6600Katanakaji^000000]";
		mes "What ^FF0099element^000000 would you like to put into your weapon?";
		switch( select( "^0000FFICE^000000.:^993300EARTH^000000.:^FF0000FIRE^000000.:^33CC00WIND^000000.:None." ) ) {
			case 1:
				mes "You wish to forge with ^0000FFMYSTIC FROZEN^000000.";
				set .EleFor1, 1;
				set .ForgeChance11, .ForgeChance11 - 20;
				break;
			case 2:
				mes "You wish to forge with ^993300GREAT NATURE^000000.";
				set .EleFor1, 2;
				set .ForgeChance11, .ForgeChance11 - 20;
				break;
			case 3:
				mes "You wish to forge with ^FF0000FLAME HEART^000000.";
				set .EleFor1, 3;
				set .ForgeChance11, .ForgeChance11 - 20;
				break;
			case 4:
				mes "You wish to forge with ^33CC00ROUGH WIND^000000.";
				set .EleFor1, 4;
				set .ForgeChance11, .ForgeChance11 - 20;
				break;
			case 5:
				mes "You do not wish to insert an element into your weapon.";
				set .EleFor1, 0;
				break;
		}
	}
	if ( getgmlevel() < .gmbypasslv1 ) {
		callfunc ( "LOL1_ChkSCEle", .EleFor1 );
		setd ".ForgeItem1", .ForgeID1;
		set .forgeable, callfunc ( "LOL1_Chk" + .ForgeItem1 + "i", .SCFor1 );
		if ( .forgeable == 0 ) {
			next;
			mes "[^FF6600Katanakaji^000000]";
			mes "You do not have all the required materials. Please come back when you do.";
			close;
		}
	}
	if( .SCFor1 == 1 ) {
		setd ".StarCrumb$", "Very Strong ";
	}
	if( .SCFor1 == 2 ) {
		setd ".StarCrumb$", "Very Very Strong ";
	}
	if( .SCFor1 == 3 ) {
		setd ".StarCrumb$", "Very Very Very Strong ";
	}
	if( .EleFor1 == 1 ) {
		setd ".Element$", "Ice ";
	}
	if( .EleFor1 == 2 ) {
		setd ".Element$", "Earth ";
	}
	if( .EleFor1 == 3 ) {
		setd ".Element$", "Fire ";
	}
	if( .EleFor1 == 4 ) {
		setd ".Element$", "Wind ";
	}
	next;
	if( .perfectchance1 == 1 ) {
		set .ForgeChance11, 100;
	}
		if( Zeny < .forgeprice1 ) {
			clear;
			mes "[^FF6600Katanakaji^000000]","You do not have the required money. Please come back when you do.";
			close;
			}
	mes "[^FF6600Katanakaji^000000]";
	mes "We are now ready to forge your ^FF0000" + .StarCrumb$ + .Element$ + getitemname( .ForgeID1 ) + "^000000, at a ^FF0000" + .ForgeChance11 + "^000000% chance.";
	mes "Cost = ^0055FF 500.000 ^000000 zeny.";
	mes "^009900ALL ITEMS WILL BE CONSUMED UPON EITHER FAILURE OR SUCCESS^000000. Continue?";
	next;
	switch( select( "Yes.:No." ) ) {
		case 1:
		Zeny = Zeny - .forgeprice1;
		mes "[^FF6600Katanakaji^000000]";
		mes "Give me a second ..";		
		progressbar "ffff00",.Wait;		
			if( getgmlevel() < .gmbypasslv1 ) {
				callfunc ( "LOL1_DelSCEle", .SCFor1, .EleFor1 );
				callfunc "LOL1_Del" + .ForgeItem1 + "i";
			}
			if( .ForgeChance11 >= rand( 100 ) ) {
				if( .nameset1 == 1 ) {
					set .name3, getcharid( 0 ) & 65535;
					set .name4, getcharid( 0 ) >> 16;
				}
				set .LOL1face, .EleFor1 + ( ( .SCFor1 * 5 ) << 8 );
				getitem2 .ForgeID1, 1, 1, 0, 0, 255, .LOL1face, .name3, .name4;
				specialeffect 154;
				next;
				mes "[^FF6600Katanakaji^000000]";
				mes "There you go! Enjoy your new weapon!";
				close;
			}
			else {
				specialeffect 155;
				next;
				mes "[^FF6600Katanakaji^000000]";
				mes "I am very sorry, item creation has ^FF0000failed^000000. Better luck next time.";
				close;
			}
		case 2:
			mes "[^FF6600Katanakaji^000000]";
			mes "Well alright, come back if you change your mind.";
			close;
		
	}
}

//Item-Check and Delete Functions!

//STAR CRUMBS AND ELE.
function	script	LOL1_ChkSCEle	{
	if( getarg( 0 ) == 1 && countitem( 995 ) < 1 ) {
		mes "You do not have the required ^0000FFMystic Frozen^000000. Come back when you do.";
		close;
	}
	if( getarg( 0 ) == 2 && countitem( 997 ) < 1 ) {
		mes "You do not have the required ^993300Great Nature^000000. Come back when you do.";
		close;
	}
	if( getarg( 0 ) == 3 && countitem( 994 ) < 1 ) {
		mes "You do not have the required ^FF0000Flame Heart^000000. Come back when you do.";
		close;
	}
	if( getarg( 0 ) == 4 && countitem( 996 ) < 1 ) {
		mes "You do not have the required ^33CC00Rough Wind^000000. Come back when you do.";
		close;
	}
	return;
}
function	script	LOL1_DelSCEle	{
	if( getarg( 0 ) != 0 ) {
		delitem 1000,getarg( 0 );
	}
	if( getarg( 1 ) == 1 ) {
		delitem 995,1;
	}
	if( getarg( 1 ) == 2 ) {
		delitem 997,1;
	}
	if( getarg( 1 ) == 3 ) {
		delitem 994,1;
	}
	if( getarg( 1 ) == 4 ) {
		delitem 996,1;
	}
	return;
}


//DAGGERS:
// -knife
function	script	LOL1_Chk1201i	{
	if( countitem( 1000 ) >= getarg( 0 ) && countitem( 998 ) >= 1 && countitem( 909 ) >= 10 && countitem( 613 ) >= 1   ) {
		return 1;
	}
	else {
		return 0;
	}
}
function	script	LOL1_Del1201i	{
	delitem 998,1;
	delitem 909,10; delitem 613,1;
	return;
}
// -cutter
function	script	LOL1_Chk1204i	{
	if( countitem( 1000 ) >= getarg( 0 ) && countitem( 998 ) >= 25 && countitem( 613 ) >= 1   ) {
		return 1;
	}
	else {
		return 0;
	}
}
function	script	LOL1_Del1204i	{
	delitem 998,25;  delitem 613,1;
	return;
}
// -main gauche
function	script	LOL1_Chk1207i	{
	if( countitem( 1000 ) >= getarg( 0 ) && countitem( 998 ) >= 50 && countitem( 613 ) >= 1   ) {
		return 1;
	}
	else {
		return 0;
	}
}
function	script	LOL1_Del1207i	{
	delitem 998,50;  delitem 613,1;
	return;
}
// -dirk
function	script	LOL1_Chk1210i	{
	if( countitem( 1000 ) >= getarg( 0 ) && countitem( 999 ) >= 17 && countitem( 614 ) >= 1   ) {
		return 1;
	}
	else {
		return 0;
	}
}
function	script	LOL1_Del1210i	{
	delitem 999,17;	 delitem 614,1;
	return;
}
// -dagger
function	script	LOL1_Chk1213i	{
	if( countitem( 1000 ) >= getarg( 0 ) && countitem( 999 ) >= 30 && countitem( 614 ) >= 1   ) {
		return 1;
	}
	else {
		return 0;
	}
}
function	script	LOL1_Del1213i	{
	delitem 999,30;	 delitem 614,1;
	return;
}
// -stiletto
function	script	LOL1_Chk1216i	{
	if( countitem( 1000 ) >= getarg( 0 ) && countitem( 999 ) >= 40 && countitem( 614 ) >= 1   ) {
		return 1;
	}
	else {
		return 0;
	}
}
function	script	LOL1_Del1216i	{
	delitem 999,40;	 delitem 614,1;
	return;
}
// -gladius
function	script	LOL1_Chk1219i	{
	if( countitem( 1000 ) >= getarg( 0 ) && countitem( 999 ) >= 40 && countitem( 984 ) >= 4 && countitem( 726 ) >= 1 && countitem( 615 ) >= 1   ) {
		return 1;
	}
	else {
		return 0;
	}
}
function	script	LOL1_Del1219i	{
	delitem 984,4;	 delitem 615,1;
	delitem 999,40;
	delitem 726,1;
	return;
}
// -damascus
function	script	LOL1_Chk1222i	{
	if( countitem( 1000 ) >= getarg( 0 ) && countitem( 999 ) >= 60 && countitem( 984 ) >= 4 && countitem( 729 ) && countitem( 615 ) >= 1   >= 1 ) {
		return 1;
	}
	else {
		return 0;
	}
}
function	script	LOL1_Del1222i	{
	delitem 984,4;	 delitem 615,1;
	delitem 999,60;
	delitem 729,1;
	return;
}

//ONE-HANDED SWORDS:
// -sword
function	script	LOL1_Chk1101i	{
	if( countitem( 1000 ) >= getarg( 0 ) && countitem( 998 ) >= 2 && countitem( 613 ) >= 1   ) {
		return 1;
	}
	else {
		return 0;
	}
}
function	script	LOL1_Del1101i	{
	delitem 998,2;	 delitem 613,1;
	return;
}
// -falchion
function	script	LOL1_Chk1104i	{
	if( countitem( 1000 ) >= getarg( 0 ) && countitem( 998 ) >= 30 && countitem( 613 ) >= 1   ) {
		return 1;
	}
	else {
		return 0;
	}
}
function	script	LOL1_Del1104i	{
	delitem 998,30;	 delitem 613,1;
	return;
}
// -blade
function	script	LOL1_Chk1107i	{
	if( countitem( 1000 ) >= getarg( 0 ) && countitem( 998 ) >= 45 && countitem( 913 ) >= 25 && countitem( 613 ) >= 1   ) {
		return 1;
	}
	else {
		return 0;
	}
}
function	script	LOL1_Del1107i	{
	delitem 998,45;	 delitem 613,1;
	delitem 913,25;
	return;
}
// -rapier
function	script	LOL1_Chk1110i	{
	if( countitem( 1000 ) >= getarg( 0 ) && countitem( 999 ) >= 20 && countitem( 614 ) >= 1   ) {
		return 1;
	}
	else {
		return 0;
	}
}
function	script	LOL1_Del1110i	{
	delitem 999,20;	 delitem 614,1;
	return;
}
// -scimitar
function	script	LOL1_Chk1113i	{
	if( countitem( 1000 ) >= getarg( 0 ) && countitem( 999 ) >= 35 && countitem( 614 ) >= 1   ) {
		return 1;
	}
	else {
		return 0;
	}
}
function	script	LOL1_Del1113i	{
	delitem 999,35;	 delitem 614,1;
	return;
}
// -ring pommel saber
function	script	LOL1_Chk1122i	{
	if( countitem( 1000 ) >= getarg( 0 ) && countitem( 999 ) >= 40 && countitem( 920 ) >= 50 && countitem( 614 ) >= 1   ) {
		return 1;
	}
	else {
		return 0;
	}
}
function	script	LOL1_Del1122i	{
	delitem 999,40;	 delitem 614,1;
	delitem 920,50;
	return;
}
// -saber
function	script	LOL1_Chk1126i	{
	if( countitem( 1000 ) >= getarg( 0 ) && countitem( 999 ) >= 5 && countitem( 984 ) >= 8 && countitem( 727 ) >= 1 && countitem( 615 ) >= 1   ) {
		return 1;
	}
	else {
		return 0;
	}
}
function	script	LOL1_Del1126i	{
	delitem 984,8;	 delitem 615,1;
	delitem 999,5;
	delitem 727,1;
	return;
}
// -haedongum
function	script	LOL1_Chk1123i	{
	if( countitem( 1000 ) >= getarg( 0 ) && countitem( 999 ) >= 10 && countitem( 984 ) >= 8 && countitem( 728 ) >= 1 && countitem( 615 ) >= 1   ) {
		return 1;
	}
	else {
		return 0;
	}
}
function	script	LOL1_Del1123i	{
	delitem 984,8;	 delitem 615,1;
	delitem 999,10;
	delitem 728,1;
	return;
}
// -tsurugi
function	script	LOL1_Chk1119i	{
	if( countitem( 1000 ) >= getarg( 0 ) && countitem( 999 ) >= 15 && countitem( 984 ) >= 8 && countitem( 718 ) >= 1 && countitem( 615 ) >= 1   ) {
		return 1;
	}
	else {
		return 0;
	}
}
function	script	LOL1_Del1119i	{
	delitem 984,8;	 delitem 615,1;
	delitem 999,15;
	delitem 718,1;
	return;
}
// -flamberge
function	script	LOL1_Chk1129i	{
	if( countitem( 1000 ) >= getarg( 0 ) && countitem( 984 ) >= 16 && countitem( 724 ) >= 1 && countitem( 615 ) >= 1   ) {
		return 1;
	}
	else {
		return 0;
	}
}
function	script	LOL1_Del1129i	{
	delitem 984,16;	 delitem 615,1;
	delitem 724,1;
	return;
}

//TWO-HANDED SWORDS:
// -katana
function	script	LOL1_Chk1116i	{
	if( countitem( 1000 ) >= getarg( 0 ) && countitem( 998 ) >= 35 && countitem( 958 ) >= 15 && countitem( 613 ) >= 1   ) {
		return 1;
	}
	else {
		return 0;
	}
}
function	script	LOL1_Del1116i	{
	delitem 998,35;	 delitem 613,1;
	delitem 958,15;
	return;
}
// -slayer
function	script	LOL1_Chk1151i	{
	if( countitem( 1000 ) >= getarg( 0 ) && countitem( 999 ) >= 25 && countitem( 957 ) >= 20 && countitem( 614 ) >= 1   ) {
		return 1;
	}
	else {
		return 0;
	}
}
function	script	LOL1_Del1151i	{
	delitem 999,25;	 delitem 614,1;
	delitem 957,20;
	return;
}
// -bastard sword
function	script	LOL1_Chk1154i	{
	if( countitem( 1000 ) >= getarg( 0 ) && countitem( 999 ) >= 45 && countitem( 614 ) >= 1   ) {
		return 1;
	}
	else {
		return 0;
	}
}
function	script	LOL1_Del1154i	{
	delitem 999,45;	 delitem 614,1;
	return;
}
// -two-handed sword
function	script	LOL1_Chk1157i	{
	if( countitem( 1000 ) >= getarg( 0 ) && countitem( 999 ) >= 10 && countitem( 984 ) >= 12 && countitem( 615 ) >= 1   ) {
		return 1;
	}
	else {
		return 0;
	}
}
function	script	LOL1_Del1157i	{
	delitem 984,12;	 delitem 615,1;
	delitem 999,10;
	return;
}
// -broad sword
function	script	LOL1_Chk1160i	{
	if( countitem( 1000 ) >= getarg( 0 ) && countitem( 999 ) >= 20 && countitem( 984 ) >= 12 && countitem( 615 ) >= 1   ) {
		return 1;
	}
	else {
		return 0;
	}
}
function	script	LOL1_Del1160i	{
	delitem 984,12;	 delitem 615,1;
	delitem 999,20;
	return;
}
// -claymore
function	script	LOL1_Chk1163i	{
	if( countitem( 1000 ) >= getarg( 0 ) && countitem( 999 ) >= 20 && countitem( 984 ) >= 16 && countitem( 733 ) >= 1 && countitem( 615 ) >= 1   ) {
		return 1;
	}
	else {
		return 0;
	}
}
function	script	LOL1_Del1163i	{
	delitem 999,20;	 delitem 615,1;
	delitem 984,16;
	delitem 733,1;
	return;
}

//MACES:
// -club
function	script	LOL1_Chk1501i	{
	if( countitem( 1000 ) >= getarg( 0 ) && countitem( 998 ) >= 3 && countitem( 613 ) >= 1   ) {
		return 1;
	}
	else {
		return 0;
	}
}
function	script	LOL1_Del1501i	{
	delitem 998,3;	 delitem 613,1;
	return;
}
// -mace
function	script	LOL1_Chk1504i	{
	if( countitem( 1000 ) >= getarg( 0 ) && countitem( 998 ) >= 30 && countitem( 613 ) >= 1   ) {
		return 1;
	}
	else {
		return 0;
	}
}
function	script	LOL1_Del1504i	{
	delitem 998,30;	 delitem 613,1;
	return;
}
// -smasher
function	script	LOL1_Chk1507i	{
	if( countitem( 1000 ) >= getarg( 0 ) && countitem( 999 ) >= 20 && countitem( 614 ) >= 1   ) {
		return 1;
	}
	else {
		return 0;
	}
}
function	script	LOL1_Del1507i	{
	delitem 999,20;	 delitem 614,1;
	return;
}
// -flail
function	script	LOL1_Chk1510i	{
	if( countitem( 1000 ) >= getarg( 0 ) && countitem( 999 ) >= 33 && countitem( 614 ) >= 1   ) {
		return 1;
	}
	else {
		return 0;
	}
}
function	script	LOL1_Del1510i	{
	delitem 999,33;	 delitem 614,1;
	return;
}
// -chain
function	script	LOL1_Chk1519i	{
	if( countitem( 1000 ) >= getarg( 0 ) && countitem( 999 ) >= 45 && countitem( 614 ) >= 1   ) {
		return 1;
	}
	else {
		return 0;
	}
}
function	script	LOL1_Del1519i	{
	delitem 999,45;	 delitem 614,1;
	return;
}
// -morning star
function	script	LOL1_Chk1513i	{
	if( countitem( 1000 ) >= getarg( 0 ) && countitem( 999 ) >= 85 && countitem( 730 ) >= 1 && countitem( 615 ) >= 1   ) {
		return 1;
	}
	else {
		return 0;
	}
}
function	script	LOL1_Del1513i	{
	delitem 999,85;	 delitem 615,1;
	delitem 730,1;
	return;
}
// -sword mace
function	script	LOL1_Chk1516i	{
	if( countitem( 1000 ) >= getarg( 0 ) && countitem( 999 ) >= 100 && countitem( 963 ) >= 20 && countitem( 615 ) >= 1   ) {
		return 1;
	}
	else {
		return 0;
	}
}
function	script	LOL1_Del1516i	{
	delitem 999,100;	delitem 615,1;
	delitem 963,20;
	return;
}
// -stunner
function	script	LOL1_Chk1522i	{
	if( countitem( 1000 ) >= getarg( 0 ) && countitem( 999 ) >= 120 && countitem( 968 ) >= 1 && countitem( 615 ) >= 1   ) {
		return 1;
	}
	else {
		return 0;
	}
}
function	script	LOL1_Del1522i	{
	delitem 999,120;	delitem 615,1;
	delitem 968,1;
	return;
}

//SPEARS:
// -javelin
function	script	LOL1_Chk1401i	{
	if( countitem( 1000 ) >= getarg( 0 ) && countitem( 998 ) >= 3 && countitem( 613 ) >= 1   ) {
		return 1;
	}
	else {
		return 0;
	}
}
function	script	LOL1_Del1401i	{
	delitem 998,3;	 delitem 613,1;
	return;
}
// -spear
function	script	LOL1_Chk1404i	{
	if( countitem( 1000 ) >= getarg( 0 ) && countitem( 998 ) >= 35 && countitem( 613 ) >= 1   ) {
		return 1;
	}
	else {
		return 0;
	}
}
function	script	LOL1_Del1404i	{
	delitem 998,35;	 delitem 613,1;
	return;
}
// -pike
function	script	LOL1_Chk1407i	{
	if( countitem( 1000 ) >= getarg( 0 ) && countitem( 998 ) >= 70 && countitem( 613 ) >= 1   ) {
		return 1;
	}
	else {
		return 0;
	}
}
function	script	LOL1_Del1407i	{
	delitem 998,70;	 delitem 613,1;
	return;
}
// -guisarme
function	script	LOL1_Chk1451i	{
	if( countitem( 1000 ) >= getarg( 0 ) && countitem( 999 ) >= 25 && countitem( 614 ) >= 1   ) {
		return 1;
	}
	else {
		return 0;
	}
}
function	script	LOL1_Del1451i	{
	delitem 999,25;	 delitem 614,1;
	return;
}
// -glaive
function	script	LOL1_Chk1454i	{
	if( countitem( 1000 ) >= getarg( 0 ) && countitem( 999 ) >= 40 && countitem( 614 ) >= 1   ) {
		return 1;
	}
	else {
		return 0;
	}
}
function	script	LOL1_Del1454i	{
	delitem 999,40;	 delitem 614,1;
	return;
}
// -partizan
function	script	LOL1_Chk1457i	{
	if( countitem( 1000 ) >= getarg( 0 ) && countitem( 999 ) >= 55 && countitem( 614 ) >= 1   ) {
		return 1;
	}
	else {
		return 0;
	}
}
function	script	LOL1_Del1457i	{
	delitem 999,55;	 delitem 614,1;
	return;
}
// -trident
function	script	LOL1_Chk1460i	{
	if( countitem( 1000 ) >= getarg( 0 ) && countitem( 999 ) >= 10 && countitem( 984 ) >= 8 && countitem( 720 ) >= 5 && countitem( 615 ) >= 1   ) {
		return 1;
	}
	else {
		return 0;
	}
}
function	script	LOL1_Del1460i	{
	delitem 984,8;	 delitem 615,1;
	delitem 999,10;
	delitem 720,5;
	return;
}
// -halberd
function	script	LOL1_Chk1463i	{
	if( countitem( 1000 ) >= getarg( 0 ) && countitem( 999 ) >= 10 && countitem( 984 ) >= 12 && countitem( 615 ) >= 1   ) {
		return 1;
	}
	else {
		return 0;
	}
}
function	script	LOL1_Del1463i	{
	delitem 984,12;	 delitem 615,1;
	delitem 999,10;
	return;
}
// -lance
function	script	LOL1_Chk1410i	{
	if( countitem( 1000 ) >= getarg( 0 ) && countitem( 984 ) >= 12 && countitem( 723 ) >= 3 && countitem( 923 ) >= 2 && countitem( 615 ) >= 1   ) {
		return 1;
	}
	else {
		return 0;
	}
}
function	script	LOL1_Del1410i	{
	delitem 984,12;	 delitem 615,1;
	delitem 723,3;
	delitem 923,2;
	return;
}

//KNUCKLES:
// -waghnakh
function	script	LOL1_Chk1801i	{
	if( countitem( 1000 ) >= getarg( 0 ) && countitem( 998 ) >= 160 && countitem( 722 ) >= 1 && countitem( 613 ) >= 1   ) {
		return 1;
	}
	else {
		return 0;
	}
}
function	script	LOL1_Del1801i	{
	delitem 998,160;	 delitem 613,1;
	delitem 722,1;
	return;
}
// -knuckle duster
function	script	LOL1_Chk1803i	{
	if( countitem( 1000 ) >= getarg( 0 ) && countitem( 999 ) >= 50 && countitem( 614 ) >= 1   ) {
		return 1;
	}
	else {
		return 0;
	}
}
function	script	LOL1_Del1803i	{
	delitem 999,50;	 delitem 614,1;
	return;
}
// -studded knuckles
function	script	LOL1_Chk1805i	{
	if( countitem( 1000 ) >= getarg( 0 ) && countitem( 999 ) >= 65 && countitem( 614 ) >= 1   ) {
		return 1;
	}
	else {
		return 0;
	}
}
function	script	LOL1_Del1805i	{
	delitem 999,65;	 delitem 614,1;
	return;
}
// -fist
function	script	LOL1_Chk1807i	{
	if( countitem( 1000 ) >= getarg( 0 ) && countitem( 984 ) >= 4 && countitem( 723 ) >= 10 && countitem( 615 ) >= 1   ) {
		return 1;
	}
	else {
		return 0;
	}
}
function	script	LOL1_Del1807i	{
	delitem 984,4;	 delitem 615,1;
	delitem 723,10;
	return;
}
// -claw
function	script	LOL1_Chk1809i	{
	if( countitem( 1000 ) >= getarg( 0 ) && countitem( 984 ) >= 8 && countitem( 728 ) >= 10  && countitem ( 615 ) >= 1   ) {
		return 1;
	}
	else {
		return 0;
	}
}
function	script	LOL1_Del1809i	{
	delitem 984,8;	 delitem 615,1;
	delitem 728,10;
	return;
}
// -finger
function	script	LOL1_Chk1811i	{
	if( countitem( 1000 ) >= getarg( 0 ) && countitem( 984 ) >= 4 && countitem( 727 ) >= 10 && countitem( 615 ) >= 1   ) {
		return 1;
	}
	else {
		return 0;
	}
}
function	script	LOL1_Del1811i	{
	delitem 984,4;	 delitem 615,1;
	delitem 727,10;
	return;
}

//AXES:
// -axe
function	script	LOL1_Chk1301i	{
	if( countitem( 1000 ) >= getarg( 0 ) && countitem( 998 ) >= 10 && countitem( 613 ) >= 1   ) {
		return 1;
	}
	else {
		return 0;
	}
}
function	script	LOL1_Del1301i	{
	delitem 998,10;	 delitem 613,1;
	return;
}
// -battle axe
function	script	LOL1_Chk1351i	{
	if( countitem( 1000 ) >= getarg( 0 ) && countitem( 998 ) >= 110 && countitem( 613 ) >= 1   ) {
		return 1;
	}
	else {
		return 0;
	}
}
function	script	LOL1_Del1351i	{
	delitem 998,110;	delitem 613,1;
	return;
}
// -hammer
function	script	LOL1_Chk1354i	{
	if( countitem( 1000 ) >= getarg( 0 ) && countitem( 999 ) >= 30 && countitem( 614 ) >= 1   ) {
		return 1;
	}
	else {
		return 0;
	}
}
function	script	LOL1_Del1354i	{
	delitem 999,30;	 delitem 614,1;
	return;
}
// -buster
function	script	LOL1_Chk1357i	{
	if( countitem( 1000 ) >= getarg( 0 ) && countitem( 999 ) >= 20 && countitem( 984 ) >= 4 && countitem( 922 ) >= 30 && countitem( 615 ) >= 1   ) {
		return 1;
	}
	else {
		return 0;
	}
}
function	script	LOL1_Del1357i	{
	delitem 984,4;	 delitem 615,1;
	delitem 999,20;
	delitem 922,30;
	return;
}
// -two-handed axe
function	script	LOL1_Chk1360i	{
	if( countitem( 1000 ) >= getarg( 0 ) && countitem( 999 ) >= 10 && countitem( 984 ) >= 8 && countitem( 719 ) >= 1 && countitem( 615 ) >= 1   ) {
		return 1;
	}
	else {
		return 0;
	}
}
function	script	LOL1_Del1360i	{
	delitem 999,10;	 delitem 615,1;
	delitem 984,8;
	delitem 719,1;
	return;
}